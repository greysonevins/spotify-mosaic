{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","Components/Playlist.js","Components/PlaylistSearch.js"],"names":["CardActionArea","React","props","ref","children","classes","className","focusVisibleClassName","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","focusVisible","focusHighlight","withStyles","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","name","useStyles","makeStyles","card","maxWidth","maxHeight","margin","spacing","media","height","Playlist","setSearchState","data","Card","CardHeader","title","Typography","subheader","Fragment","owner","display_name","tracks","total","Link","href","external_urls","spotify","target","Tooltip","aria-label","onClick","playlist","id","playlistInfo","CardMedia","style","paddingTop","image","images","length","url","CardActions","Button","variant","PlaylistSearch","query","type","Bearer","useState","lastSearch","setLastSearch","dataResource","setDataRes","page","setPage","lastPage","setLastPage","useEffect","val","qs","stringify","offset","newData","susepnsify","fetchSpotifyAPI","read","console","log","Grid","container","direction","justify","alignItems","playlists","items","map","ind","item","key","xs","md","lg","disabled"],"mappings":"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","file":"static/js/3.a630b958.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import React, {useState, useEffect} from 'react';\nimport {Button, Card, CardMedia, CardActionArea, CardActions, CardHeader,Link, Tooltip, Typography} from \"@material-ui/core\";\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        maxWidth: 500,\n        maxHeight: 600,\n        margin: theme.spacing(2),\n    },\n    media: {\n        height: 190,\n    },\n}));\nexport default function Playlist({setSearchState, data}) {\n    const classes = useStyles()\n\n    // console.log(data)\n    return(\n        <Card className={classes.card}>\n            <CardHeader\n                title={<Typography >{data.name}</Typography>}\n                subheader={\n                    <React.Fragment>\n\n                        <Typography >{data.owner.display_name} {data.tracks.total}</Typography>\n                        <Link href={data.external_urls.spotify} target={'_blank'}>Link Here</Link>\n                    </React.Fragment>\n                }\n                />\n\n            <Tooltip title=\"Click to Create Mosaic from this Playlist\" aria-label=\"add\">\n            <CardActionArea\n                onClick={() => setSearchState({playlist: data.id, playlistInfo: data})}\n            >\n\n                    <CardMedia\n                        className={classes.media}\n                        style={{height: 0, paddingTop: '56.25%'}}\n                        image={!! data.images && data.images.length > 0 ? data.images[0].url : null}\n                    />\n                    <CardActions>\n                        <Button onClick={() => setSearchState({playlist: data.id})} variant={'outlined'}>Click to Create Mosaic Fom Playlist</Button>\n                    </CardActions>\n            </CardActionArea>\n            </Tooltip>\n\n        </Card>\n\n    )\n\n}","import React, {useState, useEffect} from 'react';\nimport {fetchSpotifyAPI, susepnsify} from \"../api\";\nimport {Button, Grid} from '@material-ui/core'\nimport qs from 'qs';\nimport Playlist from \"./Playlist\";\n\n\n\n\nexport default function PlaylistSearch({query, type, Bearer, setSearchState}) {\n\n\n    const [lastSearch,setLastSearch] = useState('')\n\n    let [dataResource, setDataRes] = useState(null)\n    const [page, setPage] = useState(0)\n    const [lastPage, setLastPage] =useState(0)\n    // const [data, setData] =useState(null)\n\n    // let data;\n\n    useEffect(() => {\n        if (!! query && page !== lastPage){\n            const val = qs.stringify({query, type, offset:page})\n            const newData = susepnsify(fetchSpotifyAPI(val, {'Authorization': `Bearer ${Bearer}`}))\n            setDataRes(newData)\n            setLastPage(page)\n\n        }\n        else if (!! query && query !== lastSearch) {\n            const val = qs.stringify({query, type, offset:page})\n            const newData = susepnsify(fetchSpotifyAPI(val, {'Authorization': `Bearer ${Bearer}`}))\n            setDataRes(newData)\n            setLastSearch(query)\n        } else {\n            setDataRes(null)\n        }\n    }, [query, page])\n\n    let data;\n    if (!! dataResource){\n        data =dataResource.read()\n        console.log(data, \"ran\")\n    }\n\n\n\n\n\n\n\n    return (\n        <React.Fragment>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n\n            {!! data && !! data.playlists &&  data.playlists.items.length > 0 && (\n\n\n                <React.Fragment>\n                    {data.playlists.items.map((playlist, ind) => (\n                    <Grid\n                        item\n                        key={ind}\n                        xs={12}\n                        md={6}\n                        lg={4}\n                    >\n\n                        <Playlist\n                            key={ind}\n                            setSearchState={setSearchState}\n                            data={playlist}\n                        />\n                    </Grid>\n                    ))}\n\n\n                </React.Fragment>\n\n            )}\n\n            </Grid>\n            {!! data && (\n                <React.Fragment>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n\n                    >\n                    <Button  disabled={page === 0 ? true : false} onClick={() => setPage(page => page -1)}>Last Page</Button>\n                    <Button disabled={((page + 1) * 20) >= data.total ? true : false } onClick={() => setPage(page => page + 1)}>Next Page</Button>\n                    </Grid>\n                </React.Fragment>\n\n            )}\n\n        </React.Fragment>\n\n    )\n\n\n}"],"sourceRoot":""}